
# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'dbtproject'
version: '1.2.0'
config-version: 2

# This setting configures which "profile" dbt uses for this project.
profile: 'default'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

target-path: "target"  # directory which will store compiled SQL files
clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_modules"


vars:
  dbt_artifacts:
     dbt_artifacts_database: "{{ env_var('ARTIFACTS_DB')}}"
     dbt_artifacts_schema: "{{ env_var('ARTIFACTS_SCHEMA')}}" # optional, default is your target schema

  # Mandatory if specified
  env_vars: ['GITHUB_RUN_ID']

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/ directory
# as tables. These settings can be overridden in the individual model files
# using the `{{ config(...) }}` macro.
models:
  +transient: false

  dbtproject:
    example:
      +schema: "dbt_default"

      # Config indicated by + and applies to all files under models/example/
      #example:
       # +materialized: view

  dbt_artifacts:
    +database: "{{ env_var('ARTIFACTS_DB')}}"
    +schema: "{{ env_var('ARTIFACTS_SCHEMA')}}"
    staging:
      +database: "{{ env_var('ARTIFACTS_DB')}}"
      +schema: "{{ env_var('ARTIFACTS_SCHEMA')}}"

seeds:
  +schema: "dbt_default"
  dbtproject:
   country_codes:
    +column_types:
      country_code: varchar(2)
      country_name: varchar(32)
   CDO_TA_IDT_CUSTOMER:
   CDO_TA_IDT_PRODUCT:

#hook
on-run-end:
  - "{{ dbt_artifacts.upload_results(results) }}"
  - 'grant usage on schema SBX_DBT_TESTING_RAW.DBT_METRICS to role DBT_TESTING_DEVELOPER'
  - 'grant select on all views in schema SBX_DBT_TESTING_RAW.DBT_METRICS to role DBT_TESTING_DEVELOPER'
  - 'grant select on all tables in schema SBX_DBT_TESTING_RAW.DBT_METRICS to role DBT_TESTING_DEVELOPER'